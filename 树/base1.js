// 基础定义: 用链表定义
function TreeNode(val, left, right) {
  this.val = val === undefined ? 0 : val;
  this.left = left === undefined ? null : left;
  this.right = right === undefined ? null : right;
}

/**
 * 二叉树形态：
 * 1、满二叉树
 * 2、完全二叉树：除了最后一层外，其余均满，而且最后一层必须集中在左侧
 * 3、二叉搜索树（有数值）：
 *    3.1 左子树不空，左子树所有节点均小于根节点值
 *    3.2 若右子树存在，右子树所有节点均大于根节点值
 *    3.3 左、右子树也分别为二叉树排序树
 * 4、平衡二叉搜索树 AVL（有数值）：是一个空树或左右子树高度差不超过 1，且左右子树均为平衡二叉树
 *
 * 二叉树存储方式：顺序存储（数组）、链式存储（指针）
 *
 * 遍历方式：
 * 1、深度优先遍历：
 *    1.1 前序（中左右）、中序（左中右）、后序（左右中）
 *    1.2 可采用栈来实现
 *    1.3 递归法、迭代法
 * 2、广度优先遍历：
 *    2.1 层次遍历
 *    2.2 迭代法
 *
 * https://programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%AE%9A%E4%B9%89
 */
